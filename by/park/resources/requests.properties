############################
##   requests SQLServer   ##
############################

## Forester **** viewTask()
viewTask =\
  SELECT lt.Id, Title + ' ' + CONVERT(nvarchar(4), p.Id) Plant, TaskType \
  FROM ListOwnerTasks lt \
  JOIN Plants p ON lt.PlantId = p.ID \
  JOIN Tasks t ON lt.TaskId = t.ID \
  ORDER BY lt.Id

## Forester **** viewRÂportList()
viewRÂportList =\
  SELECT lr.Id, Title + ' ' + CONVERT(nvarchar(4), p.Id) Plant, TaskType \
  FROM ListForesterReports lr \
  JOIN ListOwnerTasks lt ON lr.OwnerTaskId = lt.Id \
  JOIN Plants p ON lt.PlantId = p.ID \
  JOIN Tasks t ON lt.TaskId = t.ID \
  ORDER BY lr.Id

## Forester **** performTask(int idOwnerTask)
performTask = INSERT ListForesterReports (OwnerTaskId) VALUES (?)

## Forester **** deleteReport(int foresterReportId)
deleteReport = DELETE FROM ListForesterReports WHERE Id = ?

## Owner **** insertPlant(String title)
addSql = INSERT Plants (Title) VALUES (?)
extractSql = SELECT TOP 1 Id FROM Plants ORDER BY ID DESC

## Owner **** findPlant(int idPlant)
findPlant = SELECT * FROM Plants WHERE Id = ?

## Owner **** deletePlant(int idPlant)
deletePlant = DELETE FROM Plants WHERE Id = ?

## Owner **** taskLanding(Plant plant)
taskLanding = INSERT ListOwnerTasks (PlantId, TaskId) VALUES (?, 1)

## Owner **** taskArtProcessing(Plant plant)
taskArtProcessing = INSERT ListOwnerTasks (PlantId, TaskId) VALUES (?, 2)

## Owner **** taskTreatment(Plant plant)
taskTreatment = INSERT ListOwnerTasks (PlantId, TaskId) VALUES (?, 3)

## Owner **** taskDestruction(Plant plant)
taskDestruction = INSERT ListOwnerTasks (PlantId, TaskId) VALUES (?, 4)

## Owner **** deleteTask(int idTask)
deleteTask = DELETE FROM ListOwnerTasks WHERE Id = ?

## Owner **** viewForesterReport()
viewForesterReport =\
  SELECT lr.Id, Title + ' ' + CONVERT(nvarchar(4), p.Id) Plant, TaskType \
  FROM ListForesterReports lr \
  JOIN ListOwnerTasks lt ON lr.OwnerTaskId = lt.Id \
  JOIN Plants p ON lt.PlantId = p.ID \
  JOIN Tasks t ON lt.TaskId = t.ID \
  ORDER BY lr.Id

## Owner **** confirmReport(int idReportForester)
extrSql =\
  SELECT lt.Id, PlantId, TaskId \
  FROM ListForesterReports lr \
  JOIN ListOwnerTasks lt ON lr.OwnerTaskId = lt.Id \
  WHERE lr.Id = ?
landingSql = UPDATE PlantsDetails SET LandingDate = CURRENT_TIMESTAMP WHERE ID = ?
artSql = UPDATE PlantsDetails SET ArtWorkN = ArtWorkN + 1 WHERE ID = ?
treatmentSql = UPDATE PlantsDetails SET TreatmentN = TreatmentN + 1 WHERE ID = ?
deleteSql = UPDATE PlantsDetails SET DestructionDate = CURRENT_TIMESTAMP WHERE ID = ?
cleaningF = DELETE FROM ListForesterReports WHERE Id = ?
cleaningO = DELETE FROM ListOwnerTasks WHERE Id = ?

## PlantsInfo **** viewAllPlants()
viewAllPlants =\
  SELECT p.Id, Title, LandingDate, ArtWorkN, TreatmentN, DestructionDate \
  FROM Plants p \
  JOIN PlantsDetails pd ON pd.Id = p.Id \
  WHERE LandingDate <> 0 \
  ORDER BY p.Id

## PlantsInfo **** viewPlantById(int idPlant)
viewPlantById =\
  SELECT p.Id, Title, LandingDate, ArtWorkN, TreatmentN, DestructionDate \
  FROM Plants p \
  JOIN PlantsDetails pd ON pd.Id = p.Id \
  WHERE p.Id = ?

## PlantsInfo **** viewDestroyedPlants()
viewDestroyedPlants =\
  SELECT p.Id, Title, LandingDate, ArtWorkN, TreatmentN, DestructionDate \
  FROM Plants p \
  JOIN PlantsDetails pd ON pd.Id = p.Id \
  WHERE DestructionDate <> 0 \
  ORDER BY DestructionDate

## PlantsInfo **** quantityPlantsByName(String title)
quantityPlantsByName =\
  SELECT COUNT(p.Id) Quantity, Title FROM Plants p \
  JOIN PlantsDetails pd ON pd.Id = p.Id \
  WHERE Title = ? AND LandingDate <> 0 AND DestructionDate IS NULL \
  GROUP BY Title

## PlantsInfo **** quantityArtProcessed()
quantityArtProcessed = SELECT SUM(ArtWorkN) Quantity FROM PlantsDetails

## PlantsInfo **** quantity—ured()
quantity—ured = SELECT SUM(TreatmentN) Quantity FROM PlantsDetails